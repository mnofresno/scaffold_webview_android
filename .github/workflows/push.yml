name: android-docker-builder-workflow
'on': push

jobs:
  setup:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Cache Docker layers
        uses: actions/cache@v3
        with:
          path: /tmp/.buildx-cache
          key: '${{ runner.os }}-buildx-${{ github.sha }}'
          restore-keys: |
            ${{ runner.os }}-buildx-

      - name: Log in to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: '${{ github.actor }}'
          password: '${{ secrets.GHCR_TOKEN }}'

      - name: Build and push base android docker image
        uses: docker/build-push-action@v4
        with:
          context: .
          file: Dockerfile.android-base
          tags: 'ghcr.io/mnofresno/android-build:2.0.0'
          push: true
          cache-from: 'type=local,src=/tmp/.buildx-cache'
          cache-to: 'type=local,dest=/tmp/.buildx-cache,mode=max'

      - name: Build and push yarn+webpack docker image
        uses: docker/build-push-action@v4
        with:
          context: .
          file: Dockerfile
          tags: 'ghcr.io/mnofresno/cordova-build-yarn-webpack:3.0.0'
          push: true
          cache-from: 'type=local,src=/tmp/.buildx-cache'
          cache-to: 'type=local,dest=/tmp/.buildx-cache,mode=max'

  build-apk:
    needs: setup
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Log in to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: '${{ github.actor }}'
          password: '${{ secrets.GHCR_TOKEN }}'

      - name: Build APK file
        run: ./build_apk.sh

  deploy:
    runs-on: ubuntu-latest
    needs: [build-apk]
    if: success()
    steps:
      - name: Deploy apk to auto-updater
        env:
          AUTODEPLOY_URL: ${{ vars.AUTODEPLOY_URL }}
          KEY_FILE_FOR_DEPLOY: ${{ secrets.KEY_FILE_FOR_DEPLOY }}
          REPOSITORY: scaffold_webview_android
        run: |
          response=$(curl -X POST \
            -H "Content-Type: application/json" \
            -d '{
              "key": "'"${KEY_FILE_FOR_DEPLOY}"'",
              "run_in_background": true,
              "commit": {
                "sha": "'"${{ github.sha }}"'",
                "author": "'"${{ github.actor }}"'"
              }
            }' \
            -s -o response_body.txt -w "%{http_code}" \
            --fail \
            "https://${AUTODEPLOY_URL}?repo=${REPOSITORY}&key=${KEY_FILE_FOR_DEPLOY}")

          cat response_body.txt

          if [ "$response" -ge 400 ]; then
            echo "Request failed with status code $response"
            exit 1
          fi
